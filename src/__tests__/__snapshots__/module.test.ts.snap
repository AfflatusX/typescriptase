// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`complexModule 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<src/__tests__/module.test.ts::complexModule>>
 * BESPOKE<<TEST1, fn3, test2, 3tESt3>>
 * SIGNED<<8uBGhJt3PWb03SNMlhpxvP6IzrO6xUgji3HR5OpCh8VUkyl0QPW2EjYc4Ynbxl6oG68UGAbWB5s2zy1NLLoGEQ==>>
 */

import \\"./p\\";
import \\"aqe\\";
import \\"ZZZ\\";

import {
  B,
  c,
} from \\"a\\";
import * as aaa from \\"BbB\\";
import ooo from \\"nnn\\";
import xxx from \\"www\\";
import * as zzz from \\"YYY\\";

import {
  g,
  r,
  z,
} from \\"./a\\";
import fff from \\"./ddd\\";
import * as mmm from \\"./mmm\\";
import {
  A,
  wA,
} from \\"./R\\";

export class MyClass2 extends MyClass1 {
  /* BESPOKE START <<TEST1>> */
  /* BESPOKE END <<TEST1>> */
}

interface If1 {
}

export async function function3(
  var1: string,
  var2: object,
): Promise<string[]> {
  /* BESPOKE START <<fn3>> */
  /* BESPOKE END <<fn3>> */
}

let variable3: number | null | undefined = 1;

export interface If2 {
  item: string;
}

type Ty1 = number;

export type Ty2 = string | null;

export type Ty3 = Ty2 | Ty1;

class MyClass3 extends MyClass1 implements MyInterface1, MyInterface2 {
  /* BESPOKE START <<test2>> */
  /* BESPOKE END <<test2>> */
}

export async function function2(
): Promise<string> {
}

export const variable1: string;

/* BESPOKE START <<3tESt3>> */
/* BESPOKE END <<3tESt3>> */

const variable2: string | undefined = \\"TEST\\";

export interface If3 {
  test: null | string;
  test2: If2;
}

function function1(
): void {
}
"
`;

exports[`contentModule 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<src/__tests__/module.test.ts::contentModule>>
 * BESPOKE<<TEST1, test2, fn3>>
 * SIGNED<<1hq/OkDIP7nLhiZSGn5QgnR6x0mgWJGlgOLfIQ0BMwO/Sye62bp1pC+N4aT81oeIs5GldWc2ZlzcS17rw0EuDA==>>
 */

export abstract class MyClass1 {
}

type Ty1 = number;

/* BESPOKE START <<TEST1>> */
/* BESPOKE END <<TEST1>> */

interface If1 {
}

function function1(
): void {
}

export const variable1: string;

export type Ty2 = string | null;

export async function function2(
): Promise<string> {
}

export interface If3 {
  test: null | string;
  test2: If2;
}

const variable2: string | undefined = \\"TEST\\";

let variable3: number | null | undefined = 1;

/* BESPOKE START <<test2>> */
/* BESPOKE END <<test2>> */

export async function function3(
  var1: string,
  var2: object,
): Promise<string[]> {
  /* BESPOKE START <<fn3>> */
  /* BESPOKE END <<fn3>> */
}

export interface If2 {
  item: string;
}

export type Ty3 = Ty2 | Ty1;
"
`;

exports[`emptyModule 1`] = `
"/**
 * This file is fully generated; do not manually edit.
 *
 * SOURCE<<src/__tests__/module.test.ts::emptyModule>>
 * SIGNED<<z4PhNX7vuL3xVChQ1m2AB9Yg5AULVxXcg/SpIdNs6c5H0NE8XYXysP+DGNKHfuwvY7kxvUdBeoGlODJ6+SfaPg==>>
 */
"
`;

exports[`importModule 1`] = `
"/**
 * This file is fully generated; do not manually edit.
 *
 * SOURCE<<src/__tests__/module.test.ts::importModule>>
 * SIGNED<<nuskwMYvDowcShGj7ARGsTL7b/BBCoDcLpaOivMO6l3A9oECfnr089sFlub49/+ApuhHjOHuo+PyeRSzJJ0JXw==>>
 */

import \\"./p\\";
import \\"aqe\\";
import \\"ZZZ\\";

import {
  B,
  c,
} from \\"a\\";
import * as aaa from \\"BbB\\";
import ooo from \\"nnn\\";
import xxx from \\"www\\";
import * as zzz from \\"YYY\\";

import {
  g,
  r,
  z,
} from \\"./a\\";
import fff from \\"./ddd\\";
import * as mmm from \\"./mmm\\";
import {
  A,
  wA,
} from \\"./R\\";
"
`;
