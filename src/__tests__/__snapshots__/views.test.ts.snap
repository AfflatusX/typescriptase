// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fragmentRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<+jpzCqAzc1xlibtnOpTbClm60lvkQKq+rH/okp6Npp8knbbOuLgrBVc3dCulYYHW+3ZqniyAwexdhW4Rs9mNTA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createFragmentContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IFragmentRelayProps {
  test1: string;
}

export interface IFragmentRelayState {
  test2?: string;
}

class _FragmentRelay extends React.Component<IFragmentRelayProps, IFragmentRelayState> {

  public constructor(
    props: IFragmentRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const FragmentRelay: React.ComponentType = createFragmentContainer(
  _FragmentRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const FragmentRelay: React.Component<IFragmentRelayProps, IFragmentRelayState> = polyfill(_FragmentRelay);
"
`;

exports[`paginationRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation, relay>>
 * SIGNED<<mx3H8cOPb4FA9ZsgJvGdQ4J3fMY54o4ml5XQ5LKzb/2NRyy6pxEmfr9xbYTkmKLRLudiD5a2mJFi0vD5Bek0wg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createPaginationContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPaginationRelayProps {
  test1: string;
}

class _PaginationRelay extends React.Component<IPaginationRelayProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const PaginationRelay: React.ComponentType = createPaginationContainer(
  _PaginationRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const PaginationRelay: React.Component<IPaginationRelayProps> = polyfill(_PaginationRelay);
"
`;

exports[`propsView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation>>
 * SIGNED<<wBt2R86Ab6YKnlLeERYcxYzGB5mQsZY0TwLHvZF2K+qg17tXf7eoRTcxhUsqFi/CZsqowmzegD5idHVqhXwFQw==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPropsProps {
  test1: string;
}

class Props extends React.Component<IPropsProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const Props: React.Component<IPropsProps> = polyfill(_Props);
"
`;

exports[`refetchRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<X1dW+Lc7IB3tkVS/SQCw4vPJ8Fvhg6JVvk1uy7xlRsBqFg4I+gjoU4qlItT6tjGXlm5rE6Z3/DREMQMfEU5SSg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  createRefetchContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IRefetchRelayProps {
  test1: string;
}

export interface IRefetchRelayState {
  test2?: string;
}

class _RefetchRelay extends React.Component<IRefetchRelayProps, IRefetchRelayState> {

  public constructor(
    props: IRefetchRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const RefetchRelay: React.ComponentType = createRefetchContainer(
  _RefetchRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const RefetchRelay: React.Component<IRefetchRelayProps, IRefetchRelayState> = polyfill(_RefetchRelay);
"
`;

exports[`simpleView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render>>
 * SIGNED<<0x2wh3ZgggQ3AF2ahf1Zhpou69YqdEeE6qHMZwayleOVZwk/0cUIm0YwCxV3T7fztcDc0Fj2gHSsaUDkot+rhQ==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export function Simple(
): JSX.Element {
  /* BESPOKE START <<render>> */
  /* BESPOKE END <<render>> */
}

export const Simple: React.ComponentType = polyfill(_Simple);
"
`;

exports[`stateView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation>>
 * SIGNED<<beADpxnh0mQk83s6PKN560gTo/jdKesmqDoLuDRTudjCDmcAy0AmU27CQwQZ8UdRTY4+HSRRc40Anfd0++BK/Q==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IStateProps {
  test1: string;
}

export interface IStateState {
  test2?: string;
}

class State extends React.Component<IStateProps, IStateState> {

  public constructor(
    props: IStateProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const State: React.Component<IStateProps, IStateState> = polyfill(_State);
"
`;
