// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fragmentRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<P+tDtdYger6IWR6YvHcg7WBStLXE3TMH1yhY9Tz72GTTM/6zrMOgnJ3vi8vc38cZwZrjiNRENHNdoukrAam4Mw==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createFragmentContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IFragmentRelayProps {
  test1: string;
}

export interface IFragmentRelayState {
  test2?: string;
}

class __FragmentRelay extends React.Component<IFragmentRelayProps, IFragmentRelayState> {

  public constructor(
    props: IFragmentRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _FragmentRelay: React.ComponentType = createFragmentContainer(
  __FragmentRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

polyfill(_FragmentRelay);
export const FragmentRelay: React.ComponentType = _FragmentRelay;
"
`;

exports[`paginationRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation, relay>>
 * SIGNED<<HSSME8ksshiVpdqBdJIkbW6OZaWAiP7JW6Et2w/HkooC7pXj7tPcX88rOHUbLmImFoKX6wZ6SM6pSY3uxObM5A==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createPaginationContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPaginationRelayProps {
  test1: string;
}

class __PaginationRelay extends React.Component<IPaginationRelayProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _PaginationRelay: React.ComponentType = createPaginationContainer(
  __PaginationRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

polyfill(_PaginationRelay);
export const PaginationRelay: React.ComponentType = _PaginationRelay;
"
`;

exports[`propsView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation>>
 * SIGNED<<K3b0LOQePGCpA03AohkG3Go4BtfyRuppkToc6XNKXveOHagpAqaiKMjO1DJXnQxp7FHoaqcjuXqZMQoxbtnGAw==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPropsProps {
  test1: string;
}

class _Props extends React.Component<IPropsProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

polyfill(_Props);
export const Props: React.Component<IPropsProps> = _Props;
"
`;

exports[`refetchRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<U6ujaHwV0qKzFEsPOPlMECjbldmj/asFLL7mmKqsYNXkem+Wdwzkfe0r4m3WjdZwYK/D4bWRGEsSpT2kSJ1OMA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  createRefetchContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IRefetchRelayProps {
  test1: string;
}

export interface IRefetchRelayState {
  test2?: string;
}

class __RefetchRelay extends React.Component<IRefetchRelayProps, IRefetchRelayState> {

  public constructor(
    props: IRefetchRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _RefetchRelay: React.ComponentType = createRefetchContainer(
  __RefetchRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

polyfill(_RefetchRelay);
export const RefetchRelay: React.ComponentType = _RefetchRelay;
"
`;

exports[`simpleView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render>>
 * SIGNED<<w/pl19nJI6rpBMgE9uIL/mzrw04fYJHavU3P+qMPM1rygnH+sxwnApRRc5kFXOHzuZf8KyFZWFxHsc61GBVltA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export function _Simple(
): JSX.Element {
  /* BESPOKE START <<render>> */
  /* BESPOKE END <<render>> */
}

polyfill(_Simple);
export const Simple: React.ComponentType = _Simple;
"
`;

exports[`stateView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation>>
 * SIGNED<<0F95+rmjum5CPphgULozIcl0V5/ocxUJ6nJX6uscXIggfhtqRltgrfrg1BtrCLv8t3hB7U5e5bTLtSaBTPcswA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IStateProps {
  test1: string;
}

export interface IStateState {
  test2?: string;
}

class _State extends React.Component<IStateProps, IStateState> {

  public constructor(
    props: IStateProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

polyfill(_State);
export const State: React.Component<IStateProps, IStateState> = _State;
"
`;
