// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fragmentRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<4UYFarQS/jrq8vdAGz9thagRtTSsBtkmU4gTpnrkEWQc6KPPpPvU1nbyo6/vywjRGYWN5MR4XUiZmKytH4ynNA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createFragmentContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IFragmentRelayProps {
  test1: string;
}

export interface IFragmentRelayState {
  test2?: string;
}

class _FragmentRelay extends React.Component<IFragmentRelayProps, IFragmentRelayState> {

  public constructor(
    props: IFragmentRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const FragmentRelay: React.ComponentType = createFragmentContainer(
  _FragmentRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const FragmentRelay: React.Component<IFragmentRelayProps, IFragmentRelayState>;
"
`;

exports[`paginationRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation, relay>>
 * SIGNED<<m26LdP/Ae7V8KT9z1CQfdQGasSf5ZT3f5C+T2qpzDOusslUCxCfVpVq+4+gLfk78oSxexJ1uiFTCsHiZFEIEQA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createPaginationContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPaginationRelayProps {
  test1: string;
}

class _PaginationRelay extends React.Component<IPaginationRelayProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const PaginationRelay: React.ComponentType = createPaginationContainer(
  _PaginationRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const PaginationRelay: React.Component<IPaginationRelayProps>;
"
`;

exports[`propsView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation>>
 * SIGNED<<9RXXEIiURPfjxF11hbvyp8XXx78+4rt/izJme/bpgIHp8s36DjR1CGKrCFbb3+yw+KH8fN29fQQVUMqzgXz2LA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPropsProps {
  test1: string;
}

class Props extends React.Component<IPropsProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const Props: React.Component<IPropsProps>;
"
`;

exports[`refetchRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<pcAvxbEIi5CerNpRDkMPlGrcxzvbnrZSVFoiVwNr+L7lXj/WH1kF8a540Qs0ygODKeLLkJ7dUPO3RRXGpyMhFw==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  createRefetchContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IRefetchRelayProps {
  test1: string;
}

export interface IRefetchRelayState {
  test2?: string;
}

class _RefetchRelay extends React.Component<IRefetchRelayProps, IRefetchRelayState> {

  public constructor(
    props: IRefetchRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const RefetchRelay: React.ComponentType = createRefetchContainer(
  _RefetchRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const RefetchRelay: React.Component<IRefetchRelayProps, IRefetchRelayState>;
"
`;

exports[`simpleView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render>>
 * SIGNED<<kZEjAnAZkyoHnkuxgJtFJ3FntaxuGjJkLbcY3Ul/wRviZBDawaGRwBKuKBWkK5u5aYXxSyexlVziMtPATT+sJQ==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export function Simple(
): JSX.Element {
  /* BESPOKE START <<render>> */
  /* BESPOKE END <<render>> */
}

export const Simple: React.ComponentType;
"
`;

exports[`stateView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation>>
 * SIGNED<<KGXa7Fck3JJXuEsM67IT4tpNerqgHvH7nkcZQbsDxyh6gu/IT+1CAum0X7ADC4sxQo5o3bGaQZ53JXc4gA/Cag==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IStateProps {
  test1: string;
}

export interface IStateState {
  test2?: string;
}

class State extends React.Component<IStateProps, IStateState> {

  public constructor(
    props: IStateProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const State: React.Component<IStateProps, IStateState>;
"
`;
