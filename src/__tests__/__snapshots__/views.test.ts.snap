// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fragmentRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<7vVsZVKjUMvdYiaWjWFE64ys8iWVCN1BJpfQOhPTWmtGAo1yNZuLv6Ugn49Jr+dAO7rrrS570TBGSWVsytFwXg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createFragmentContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IFragmentRelayProps {
  test1: string;
}

export interface IFragmentRelayState {
  test2?: string;
}

class __FragmentRelay, extends React.Component<IFragmentRelayProps, IFragmentRelayState> {

  public constructor(
    props: IFragmentRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const __FragmentRelay: React.ComponentType = createFragmentContainer(
  ___FragmentRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const FragmentRelay: React.Component<IFragmentRelayProps, IFragmentRelayState> = polyfill(_FragmentRelay);
"
`;

exports[`paginationRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation, relay>>
 * SIGNED<<3huS6zdZ/6VSz+Ae79xyahh9F1bc38T5pouwZpbrD53Hh9ZAM5Cr+h76poSBOM52bs6gh2QvdJxi9RJvv2wAlQ==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createPaginationContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPaginationRelayProps {
  test1: string;
}

class __PaginationRelay, extends React.Component<IPaginationRelayProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const __PaginationRelay: React.ComponentType = createPaginationContainer(
  ___PaginationRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const PaginationRelay: React.Component<IPaginationRelayProps> = polyfill(_PaginationRelay);
"
`;

exports[`propsView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation>>
 * SIGNED<<2RC9M+PNlaraGQzR1oHGadux27J1D2n4CfR9qoWZK5jukgXIK4fzR8wS/+F2HJ3ckrt56ZpdjMHFjQH1thx9cg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPropsProps {
  test1: string;
}

class _Props, extends React.Component<IPropsProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const Props: React.Component<IPropsProps> = polyfill(_Props);
"
`;

exports[`refetchRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<xjm9E0hRMspwRTRPO6LXL/jfV4+NrO9joTRa+EN/kLPLOh7x319W21eal8FKFT5qKtaiOXyVpkiWvwV+0ha0ug==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  createRefetchContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IRefetchRelayProps {
  test1: string;
}

export interface IRefetchRelayState {
  test2?: string;
}

class __RefetchRelay, extends React.Component<IRefetchRelayProps, IRefetchRelayState> {

  public constructor(
    props: IRefetchRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const __RefetchRelay: React.ComponentType = createRefetchContainer(
  ___RefetchRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const RefetchRelay: React.Component<IRefetchRelayProps, IRefetchRelayState> = polyfill(_RefetchRelay);
"
`;

exports[`simpleView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render>>
 * SIGNED<<QXFWDqUeKlHtfdZ3YqxaMmzn6WX65k28ogfn/MO82bgeUKmzW3CRnqf6KjCE9q4pU3VTaPLwurojjyRf7KIYbQ==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export function _Simple,(
): JSX.Element {
  /* BESPOKE START <<render>> */
  /* BESPOKE END <<render>> */
}

export const Simple: React.ComponentType = polyfill(_Simple);
"
`;

exports[`stateView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation>>
 * SIGNED<<dXC9uAswrVp9WfAQ24OvfoaSY5p4Ad0++8zva8ume86y395T+dNBsNNg9pEhrSJoxlcWHL4xY30BxBRYvRE1+w==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IStateProps {
  test1: string;
}

export interface IStateState {
  test2?: string;
}

class _State, extends React.Component<IStateProps, IStateState> {

  public constructor(
    props: IStateProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const State: React.Component<IStateProps, IStateState> = polyfill(_State);
"
`;
