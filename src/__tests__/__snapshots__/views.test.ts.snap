// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fragmentRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<FKF1x3pKyZXBcDGs3mmHEdABzrjyODU6XZu+zMyw2iNVMtnnW/MHBI5ULy4kF6AYHBgBOmWlByTwkSTCuiTX0Q==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createFragmentContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IFragmentRelayProps {
  test1: string;
}

export interface IFragmentRelayState {
  test2?: string;
}

class __FragmentRelay extends React.Component<IFragmentRelayProps, IFragmentRelayState> {

  public constructor(
    props: IFragmentRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _FragmentRelay: React.ComponentType = createFragmentContainer(
  __FragmentRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const FragmentRelay: React.Component<IFragmentRelayProps, IFragmentRelayState> = polyfill(_FragmentRelay);
"
`;

exports[`paginationRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation, relay>>
 * SIGNED<<AP4NJ7PP4bb8ByoE/drcfpO1r+du9+BgUOoVEYphPMaqXJIsiWeQeoi4rraxW7kbFarrQHcbSYyjljy0FKJcWg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  createPaginationContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPaginationRelayProps {
  test1: string;
}

class __PaginationRelay extends React.Component<IPaginationRelayProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _PaginationRelay: React.ComponentType = createPaginationContainer(
  __PaginationRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const PaginationRelay: React.Component<IPaginationRelayProps> = polyfill(_PaginationRelay);
"
`;

exports[`propsView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render, implementation>>
 * SIGNED<<NC+uHzIG1BRfDV0SPCuls7F1y1WGLNK4Gl8DbWQcC+rG2uxBmlk+JzqpaVHHSVLog8yU+bRH27qmOozpX5q0RA==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IPropsProps {
  test1: string;
}

class _Props extends React.Component<IPropsProps> {

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const Props: React.Component<IPropsProps> = polyfill(_Props);
"
`;

exports[`refetchRelayView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation, relay>>
 * SIGNED<<6GzydWI7l6Jop7BMWSCraFT4Z/v3KCIlcw8r2PlxKV3jmU1Mt+Ziif9VenNsDU/rSQI8gytfhpdBleS1ZGRHgw==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  createRefetchContainer,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IRefetchRelayProps {
  test1: string;
}

export interface IRefetchRelayState {
  test2?: string;
}

class __RefetchRelay extends React.Component<IRefetchRelayProps, IRefetchRelayState> {

  public constructor(
    props: IRefetchRelayProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

const _RefetchRelay: React.ComponentType = createRefetchContainer(
  __RefetchRelay,
  /* BESPOKE START <<relay>> */
  /* BESPOKE END <<relay>> */
);

export const RefetchRelay: React.Component<IRefetchRelayProps, IRefetchRelayState> = polyfill(_RefetchRelay);
"
`;

exports[`simpleView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, render>>
 * SIGNED<<QXFWDqUeKlHtfdZ3YqxaMmzn6WX65k28ogfn/MO82bgeUKmzW3CRnqf6KjCE9q4pU3VTaPLwurojjyRf7KIYbQ==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export function _Simple,(
): JSX.Element {
  /* BESPOKE START <<render>> */
  /* BESPOKE END <<render>> */
}

export const Simple: React.ComponentType = polyfill(_Simple);
"
`;

exports[`stateView 1`] = `
"/**
 * This file is partially generated; only edit bespoke sections.
 *
 * SOURCE<<DO_NOT_COMMIT::DO_NOT_COMMIT>>
 * BESPOKE<<imports, state, render, implementation>>
 * SIGNED<<WyfAxz5km4M1wMXHRwxMzerVv74ff3GiwgS6KE2GK1IlnhRT/OXBETKfKtdu9Oh9/BkWegYqrYyTC2+FPnwaSg==>>
 */

import * as React from \\"react\\";
import {
  polyfill,
} from \\"react-lifecycles-compat\\";
import {
  commitMutation,
  graphql,
} from \\"react-relay\\";

/* BESPOKE START <<imports>> */
/* BESPOKE END <<imports>> */

export interface IStateProps {
  test1: string;
}

export interface IStateState {
  test2?: string;
}

class _State extends React.Component<IStateProps, IStateState> {

  public constructor(
    props: IStateProps,
  ) {
    super(props);
    this.state = {
      /* BESPOKE START <<state>> */
      /* BESPOKE END <<state>> */
    };
  }

  public render(
  ): JSX.Element {
    /* BESPOKE START <<render>> */
    /* BESPOKE END <<render>> */
  }

  /* BESPOKE START <<implementation>> */
  /* BESPOKE END <<implementation>> */
}

export const State: React.Component<IStateProps, IStateState> = polyfill(_State);
"
`;
