// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class1 1`] = `
"export abstract class MyClass1<T> {

  public propertyInstance1: string = \\"MYVAR\\";

  public static propertyStatic1: string = \\"MYVAR\\";

  public async methodInstance1<T>(
    var1: string,
    var2: object = {},
  ): Promise<string[]> {
  }

  public static async methodStatic1<T>(
    var1: string,
    var2: object = {},
  ): Promise<string[]> {
  }
}
"
`;

exports[`class2 1`] = `
"export class MyClass2<T, V> extends MyClass1 {

  /* BESPOKE START <<TEST1>> */
  /* BESPOKE END <<TEST1>> */

  protected readonly propertyInstance2: number;

  protected readonly static propertyStatic2: number;

  protected abstract methodInstance2<T, V>(
  ): void;

  protected static abstract methodStatic2<T, V>(
  ): void;
}
"
`;

exports[`class3 1`] = `
"class MyClass3 extends MyClass1 implements MyInterface1, MyInterface2 {

  private propertyInstance3: string | null;

  private static propertyStatic3: string | null;

  private async methodInstance3(
  ): void {
    /* BESPOKE START <<methodInstance3Bespoke>> */
    /* BESPOKE END <<methodInstance3Bespoke>> */
  }

  private static async methodStatic3(
  ): void {
    /* BESPOKE START <<methodStatic3Bespoke>> */
    /* BESPOKE END <<methodStatic3Bespoke>> */
  }
}
"
`;
